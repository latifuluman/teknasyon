version: '3'

services:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - user-service

  user-service:
    build:
      context: ./../user-service
      dockerfile: ./../user-service/user-service.dockerfile
    restart: always
    # ports:
    #   - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
    environment:
      JWT_SECRET: "jwt_secret"
      DSN: "host=postgres port=5432 user=postgres password=password1 dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    depends_on:
      - postgres
      - migrate

  account-service:
    build:
      context: ./../account-service
      dockerfile: ./../account-service/account-service.dockerfile
    restart: always
    # ports:
    #   - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
    environment:
      JWT_SECRET: "jwt_secret"
      DSN: "host=postgres port=5432 user=postgres password=password1 dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    depends_on:
      - postgres
      - migrate

  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:password1@postgres:5432/users?sslmode=disable",
      "up"
    ]
    volumes:
      - ../migrations:/migrations
    depends_on:
      - postgres

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      
  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password1
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
      
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
      - ./init.sh:/init.sh
    entrypoint: ["/bin/sh", "-c", "/init.sh"]

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"